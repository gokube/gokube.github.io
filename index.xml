<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gokube</title>
    <link>https://gokube.github.io/</link>
    <description>Recent content on Gokube</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 17 Nov 2019 23:35:08 +0800</lastBuildDate>
    
	<atom:link href="https://gokube.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker_cmd</title>
      <link>https://gokube.github.io/2019/11/17/docker_cmd/</link>
      <pubDate>Sun, 17 Nov 2019 23:21:06 +0800</pubDate>
      
      <guid>https://gokube.github.io/2019/11/17/docker_cmd/</guid>
      <description> docker cmd welcome docker cmd  </description>
    </item>
    
    <item>
      <title>Ceph00</title>
      <link>https://gokube.github.io/2019/11/17/ceph00/</link>
      <pubDate>Sun, 17 Nov 2019 22:57:47 +0800</pubDate>
      
      <guid>https://gokube.github.io/2019/11/17/ceph00/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Ceph01</title>
      <link>https://gokube.github.io/2019/11/17/ceph01/</link>
      <pubDate>Sun, 17 Nov 2019 22:57:47 +0800</pubDate>
      
      <guid>https://gokube.github.io/2019/11/17/ceph01/</guid>
      <description> 分布式存储：元数据+数据（块） 元数据：NameNode 数据（块）：DateNode  ceph是对象存储系统，其每个数据对象包含元数据和数据流,是个SDS（soft defined storage） ceph特点 1、ceph把每一个数据流切分成若干个固定大小的对象数据，并以其作为原子单元完成数据存取 2、对象数据的底层存储服务由多个主机（host）组成的存储集群，该集群也被称之为RADOS（Reliable Automatic Distributed Object Store）存储集群，即可靠、自动化、分布式对象存储系统 3、librados是RADOS存储及去的API，他支持C、C++、Java、Python等编程语言；为方便用户多种场景使用，扩展的接口由： RADOSGW（跨互联网的rest对象存储）、RBD（块设备）、CEPHS（POSIX文件存储） 4、目前ceph底层到主机层的存储引擎：FileStore（基于主机的文件系统）、BlueStore（基于主机的存储设备） 5、ceph含有两个组件：mon组件（监控ceph集群底层主机存储状态）、mgr组件（L版后新增），使用帕克索斯协议 6、client --&amp;gt; DataObject --&amp;gt; pool存储池（PG）--&amp;gt; RADOS(OSD:master/slave) 鸠山码池 --&amp;gt; host主机群  CRUSH算法 ceph的关键知识： Admin Host OSD object:ID+MetaData+ Moni manage FileStore(levelDB+XFS) --&amp;gt; BlueStore(RocksDB+BlueFS)  </description>
    </item>
    
    <item>
      <title>Ceph02</title>
      <link>https://gokube.github.io/2019/11/17/ceph02/</link>
      <pubDate>Sun, 17 Nov 2019 22:57:47 +0800</pubDate>
      
      <guid>https://gokube.github.io/2019/11/17/ceph02/</guid>
      <description> ceph 部署 ceph部署工具种类： ceph-deply ceph-ansible //redhat拥有 目前最全面 ceph-chef puppet-ceph,...  ceph拓扑网络结构 ceph内部有两种数据流量
环境准备 系统盘和数据盘分开 时钟同步 主机域名解析：（host或DNS） 关闭iptables、firewalld 关闭selinux 主机准备：一台admin-host、三台monitor机器、三台数据机器 网络环境：每个主机两块网卡：一块做private-cluster，用于集群数据传输，一块作为public-cluster，用于客户端通讯 准备yum仓库,使用13版（即mimic版本）  </description>
    </item>
    
    <item>
      <title>k8s01</title>
      <link>https://gokube.github.io/2019/11/17/k8s01/</link>
      <pubDate>Sun, 17 Nov 2019 22:57:47 +0800</pubDate>
      
      <guid>https://gokube.github.io/2019/11/17/k8s01/</guid>
      <description> 大纲 。 基础概念 。 集群部署和陈述式命令管理 。 资源类型及配置清单 。 Pod资源 。 Service资源 。 存储卷 。 ConfigMap与Secret资源 。 stateful资源 。 认证、授权及控制准入 。 网络模型及网络策略 。 Pod资源调度 。 CRD、自定义资源、自定义控制器及自定义API server 。 资源指标与HPA控制器 。 Helm管理器 。 高可用k8s及部署  </description>
    </item>
    
    <item>
      <title>promethues01</title>
      <link>https://gokube.github.io/2019/11/17/promethues01/</link>
      <pubDate>Sun, 17 Nov 2019 22:57:47 +0800</pubDate>
      
      <guid>https://gokube.github.io/2019/11/17/promethues01/</guid>
      <description> intr 指标监控软件 golang开发
 学习地址 https://www.ibm.com/developerworks/cn/cloud/library/cl-lo-prometheus-getting-started-and-practice/index.html
 架构图  Prometheus 生态圈中包含了多个组件，其中许多组件是可选的：
Prometheus Server: 用于收集和存储时间序列数据。
Client Library: 客户端库，为需要监控的服务生成相应的 metrics 并暴露给 Prometheus server。当 Prometheus server 来 pull 时，直接返回实时状态的 metrics。
Push Gateway: 主要用于短期的 jobs。由于这类 jobs 存在时间较短，可能在 Prometheus 来 pull 之前就消失了。为此，这次 jobs 可以直接向 Prometheus server 端推送它们的 metrics。这种方式主要用于服务层面的 metrics，对于机器层面的 metrices，需要使用 node exporter。
Exporters: 用于暴露已有的第三方服务的 metrics 给 Prometheus。
Alertmanager: 从 Prometheus server 端接收到 alerts 后，会进行去除重复数据，分组，并路由到对收的接受方式，发出报警。常见的接收方式有：电子邮件，pagerduty，OpsGenie, webhook 等。
一些其他的工具。
  </description>
    </item>
    
    <item>
      <title>jq安装和使用</title>
      <link>https://gokube.github.io/2019/11/16/jq%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 16 Nov 2019 22:48:37 +0800</pubDate>
      
      <guid>https://gokube.github.io/2019/11/16/jq%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <description>1. 背景 REST与接口返回的数据类型基本是JSON, 在命令行获取到接口返回的数据，往往是一大堆数据，怎样在一大堆数据中只想获取到我想要的数据，就需要一个特定的工具：jq，格式化输出，方便校验。
2. jq是什么 jq是轻量级和便捷的命令行JSON解析器。
 jq is like sed for JSON data - you can use it to slice and filter and map and transform structured data with the same ease that sed, awk, grep and friends let you play with text.
 3. install  linux &amp;amp;&amp;amp; OS X
git clone https://github.com/stedolan/jq.git cd jq autoreconf -i ./configure --disable-maintainer-mode make sudo make install  macos brew 安装</description>
    </item>
    
    <item>
      <title>容器云核心知识</title>
      <link>https://gokube.github.io/2019/11/15/%E5%AE%B9%E5%99%A8%E4%BA%91%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Fri, 15 Nov 2019 00:39:03 +0800</pubDate>
      
      <guid>https://gokube.github.io/2019/11/15/%E5%AE%B9%E5%99%A8%E4%BA%91%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/</guid>
      <description>docker 是一种容器 docker 基于LXC、cgroup、chroot设计开发的，是kernel的namespace的具体实现。
容器技术包括的技术栈 1. OS层支撑的容器、OCI、CNI、Olayerfilesystem、Olayernet、pic-runtime-manage
2. 容器的调度、编排、伸缩、监控
3. 集群本身的调度、伸缩、监控、混合集群
4. 容器底层通讯和网络管理 5. 分布式存储的挂载，一致性检查，安全保证
6. 应用app的自动化CICD及rollback
7. 应用接口和相互访问的规范和约束</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://gokube.github.io/2019/11/14/about/</link>
      <pubDate>Thu, 14 Nov 2019 22:48:37 +0800</pubDate>
      
      <guid>https://gokube.github.io/2019/11/14/about/</guid>
      <description> about page 自建标签、分类目录（持续更新） tag：文章标签(hugo、docs、infra、devops、dev、cloud、AI、BigData)；从业务或岗位角度看 topic：文章主题/文章系列 category：文章分类 (container、docker、、podman、rkt、k8s、micrServic、serviceMesh、NetTec、storage、golang、python、Os、helm、k8s-operate、imghub)；从技术行业具体分类 series = &amp;ldquo;series&amp;rdquo; </description>
    </item>
    
    <item>
      <title>William blog intr</title>
      <link>https://gokube.github.io/2019/11/14/william-blog-intr/</link>
      <pubDate>Thu, 14 Nov 2019 22:46:10 +0800</pubDate>
      
      <guid>https://gokube.github.io/2019/11/14/william-blog-intr/</guid>
      <description>welcome william yangshun hugo blog in github started
本Blog的用途和目的 1、用于容器的文档Demo 2、用于k8s及kube功能的使用文档记录 3、用于容器云开发知识记录 4、便于备忘  本blog安装、部署和使用方式 参考：install page
安装步骤： --&amp;gt; 本地hugo命令安装: brew install hugo --&amp;gt; 本地建立新site: hugo new site /path/to/site --&amp;gt; 本地新建md文档: hugo new post/william.md --&amp;gt; git安装themes：hugo-icarus-themes --&amp;gt; 修改 config.toml文件 --&amp;gt; 启动: hugo server --&amp;gt; 同步: 在github建立仓库，然后hugo 生成public目录；最后push到github  本blog运行在github，我将持续将别地十数年来的技术blog迁移至本blog!</description>
    </item>
    
  </channel>
</rss>