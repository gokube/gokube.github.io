<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gokube</title>
    <link>https://gokube.github.io/</link>
    <description>Recent content on Gokube</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Nov 2019 22:48:37 +0800</lastBuildDate>
    
	<atom:link href="https://gokube.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>jq安装和使用</title>
      <link>https://gokube.github.io/2019/11/16/jq%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 16 Nov 2019 22:48:37 +0800</pubDate>
      
      <guid>https://gokube.github.io/2019/11/16/jq%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <description>1. 背景 REST与接口返回的数据类型基本是JSON, 在命令行获取到接口返回的数据，往往是一大堆数据，怎样在一大堆数据中只想获取到我想要的数据，就需要一个特定的工具：jq，格式化输出，方便校验。
2. jq是什么 jq是轻量级和便捷的命令行JSON解析器。
 jq is like sed for JSON data - you can use it to slice and filter and map and transform structured data with the same ease that sed, awk, grep and friends let you play with text.
 3. install  linux &amp;amp;&amp;amp; OS X
git clone https://github.com/stedolan/jq.git cd jq autoreconf -i ./configure --disable-maintainer-mode make sudo make install  macos brew 安装</description>
    </item>
    
    <item>
      <title>容器云核心知识</title>
      <link>https://gokube.github.io/2019/11/15/%E5%AE%B9%E5%99%A8%E4%BA%91%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Fri, 15 Nov 2019 00:39:03 +0800</pubDate>
      
      <guid>https://gokube.github.io/2019/11/15/%E5%AE%B9%E5%99%A8%E4%BA%91%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/</guid>
      <description>docker 是一种容器 docker 基于LXC、cgroup、chroot设计开发的，是kernel的namespace的具体实现。
容器技术包括的技术栈 1. OS层支撑的容器、OCI、CNI、Olayerfilesystem、Olayernet、pic-runtime-manage 2. 容器的调度、编排、伸缩、监控 3. 集群本身的调度、伸缩、监控、混合集群 4. 容器底层通讯和网络管理 5. 分布式存储的挂载，一致性检查，安全保证 6. 应用app的自动化CICD及rollback 7. 应用接口和相互访问的规范和约束</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://gokube.github.io/about/</link>
      <pubDate>Thu, 14 Nov 2019 22:48:37 +0800</pubDate>
      
      <guid>https://gokube.github.io/about/</guid>
      <description> about page 自建标签、分类目录（持续更新） tag：文章标签(hugo、docs、infra、devops、dev、cloud、AI、BigData)；从业务或岗位角度看 topic：文章主题/文章系列 category：文章分类 (container、docker、、podman、rkt、k8s、micrServic、serviceMesh、NetTec、storage、golang、python、Os、helm、k8s-operate、imghub)；从技术行业具体分类 series = &amp;ldquo;series&amp;rdquo; </description>
    </item>
    
    <item>
      <title>William blog intr</title>
      <link>https://gokube.github.io/2019/11/14/william-blog-intr/</link>
      <pubDate>Thu, 14 Nov 2019 22:46:10 +0800</pubDate>
      
      <guid>https://gokube.github.io/2019/11/14/william-blog-intr/</guid>
      <description>welcome william yangshun hugo blog in github started
本Blog的用途和目的 1、用于容器的文档Demo 2、用于k8s及kube功能的使用文档记录 3、用于容器云开发知识记录 4、便于备忘  本blog安装、部署和使用方式 参考：install page
安装步骤： --&amp;gt; 本地hugo命令安装: brew install hugo --&amp;gt; 本地建立新site: hugo new site /path/to/site --&amp;gt; 本地新建md文档: hugo new post/william.md --&amp;gt; git安装themes：hugo-icarus-themes --&amp;gt; 修改 config.toml文件 --&amp;gt; 启动: hugo server --&amp;gt; 同步: 在github建立仓库，然后hugo 生成public目录；最后push到github  本blog运行在github，我将持续将别地十数年来的技术blog迁移至本blog!</description>
    </item>
    
  </channel>
</rss>